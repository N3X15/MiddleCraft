// AUTOMATICALLY GENERATED BY MIDDLECRAFT
/* Allows plugins to access server functions without needing to link the actual server Jar. */
package net.minecraft.server;

public abstract class Chunk {
	// FIELDS
	public static boolean field_694;
	public byte[] blocks;
	public boolean isChunkLoaded;
	public World worldObj;
	public NibbleArray data;
	public NibbleArray skylightMap;
	public NibbleArray blocklightMap;
	public byte[] heightMap;
	public int field_686;
	public final int xPosition;
	public final int zPosition;
	public java.util.Map chunkTileEntityMap;
	public java.util.List[] entities;
	public boolean isTerrainPopulated;
	public boolean isModified;
	public boolean neverSave;
	public boolean field_678;
	public boolean hasEntities;
	public long lastSaveTime;
	
	// METHODS
	
	/**
	 * 
	 */
	public abstract void a();
	
	/**
	 * 
	 */
	public abstract boolean a(int a, int b);
	
	/**
	 * 
	 */
	public abstract int a(int a, int b, int c);
	
	/**
	 * 
	 */
	public abstract boolean a(int a, int b, int c, int d);
	
	/**
	 * 
	 */
	public abstract boolean a(int a, int b, int c, int d, int e);
	
	/**
	 * 
	 */
	public abstract void a(int a, int b, int c, TileEntity d);
	
	/**
	 * 
	 */
	public abstract java.util.Random a(long a);
	
	/**
	 * 
	 */
	public abstract void a(TileEntity a);
	
	/**
	 * 
	 */
	public abstract int a(EnumSkyBlock a, int b, int c, int d);
	
	/**
	 * 
	 */
	public abstract void a(EnumSkyBlock a, int b, int c, int d, int e);
	
	/**
	 * 
	 */
	public abstract void a(Entity a);
	
	/**
	 * 
	 */
	public abstract void a(Entity a, int b);
	
	/**
	 * 
	 */
	public abstract void a(Entity a, AxisAlignedBB b, java.util.List c);
	
	/**
	 * 
	 */
	public abstract void a(java.lang.Class a, AxisAlignedBB b, java.util.List c);
	
	/**
	 * 
	 */
	public abstract boolean a(boolean a);
	
	/**
	 * 
	 */
	public abstract int a(byte[] a, int b, int c, int d, int e, int f, int g, int h);
	
	/**
	 * 
	 */
	public abstract void b();
	
	/**
	 * 
	 */
	public abstract int b(int a, int b);
	
	/**
	 * 
	 */
	public abstract int b(int a, int b, int c);
	
	/**
	 * 
	 */
	public abstract void b(int a, int b, int c, int d);
	
	/**
	 * 
	 */
	public abstract void b(Entity a);
	
	/**
	 * 
	 */
	public abstract void c();
	
	/**
	 * 
	 */
	public abstract boolean c(int a, int b, int c);
	
	/**
	 * 
	 */
	public abstract int c(int a, int b, int c, int d);
	
	/**
	 * 
	 */
	public abstract void d();
	
	/**
	 * 
	 */
	public abstract TileEntity d(int a, int b, int c);
	
	/**
	 * 
	 */
	public abstract void e();
	
	/**
	 * 
	 */
	public abstract void e(int a, int b, int c);
	
	/**
	 * 
	 */
	public abstract void f();

}
