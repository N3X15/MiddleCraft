// AUTOMATICALLY GENERATED BY MIDDLECRAFT
/* Allows plugins to access server functions without needing to link the actual server Jar. */
package net.minecraft.server;

public abstract class BlockLeaves extends BlockLeavesBase{
	// FIELDS
	 Block D;
	 Block E;
	 Block F;
	 Block G;
	 Block A;
	 Block B;
	 Block C;
	 Block L;
	 Block M;
	 Block N;
	 Block O;
	 Block H;
	 Block I;
	 Block J;
	 BlockLeaves K;
	 Block U;
	 Block T;
	 Block W;
	 Block V;
	 Block Q;
	 Block P;
	 Block S;
	 Block R;
	 Block Y;
	 Block X;
	 Block Z;
	 StepSound f;
	 StepSound g;
	 StepSound d;
	 StepSound e;
	 int[] b;
	private int c;
	 boolean a;
	 boolean[] n;
	 boolean[] o;
	 StepSound l;
	 gv[] m;
	 StepSound j;
	 StepSound k;
	 StepSound h;
	 StepSound i;
	 Block w;
	 Block v;
	 BlockGrass u;
	 Block t;
	 int[] s;
	 boolean[] r;
	 int[] q;
	 boolean[] p;
	 Block z;
	 Block y;
	 Block x;
	 Material bs;
	 float br;
	 float bt;
	 double bn;
	 double bo;
	 double bp;
	 StepSound bq;
	 float bj;
	 double bk;
	 double bl;
	 double bm;
	 Block bf;
	 int bg;
	 int bh;
	 float bi;
	 Block bb;
	 Block bc;
	 Block bd;
	 BlockPortal be;
	 Block aZ;
	 Block aY;
	 Block aR;
	 Block aQ;
	 Block aT;
	 Block aS;
	 Block aV;
	 Block aU;
	 Block aX;
	 Block aW;
	 Block aI;
	 Block aJ;
	 Block aK;
	 Block aL;
	 Block aM;
	 Block aN;
	 Block aO;
	 Block aP;
	 Block aA;
	 Block aB;
	 Block aC;
	 Block aD;
	 Block aE;
	 Block aF;
	 Block aG;
	 Block aH;
	 Block az;
	 Block ay;
	 Block ba;
	 Block at;
	 Block as;
	 BlockFire ar;
	 Block aq;
	 Block ax;
	 Block aw;
	 Block av;
	 Block au;
	 Block ak;
	 Block al;
	 Block ai;
	 Block aj;
	 Block ao;
	 Block ap;
	 Block am;
	 Block an;
	 Block ac;
	 BlockFlower ad;
	 Block aa;
	 Block ab;
	 BlockFlower ag;
	 Block ah;
	 BlockFlower ae;
	 BlockFlower af;
	
	// METHODS
	
	/**
	 * 
	 */
	 boolean f(World a, int b, int c, int d)
	
	/**
	 * 
	 */
	 void g(World a, int b, int c, int d, int e)
	
	/**
	 * 
	 */
	 void a(World a, int b, int c, int d, Entity e)
	
	/**
	 * 
	 */
	 Block c(float a)
	
	/**
	 * 
	 */
	 int b()
	
	/**
	 * 
	 */
	 int a(int a)
	
	/**
	 * 
	 */
	 java.lang.String e()
	
	/**
	 * 
	 */
	 void c(World a, int b, int c, int d, int e)
	
	/**
	 * 
	 */
	 void b(World a, int b, int c, int d, EntityPlayer e)
	
	/**
	 * 
	 */
	 void a(World a, int b, int c, int d, int e, float f)
	
	/**
	 * 
	 */
	public void b(World a, int b, int c, int d, Entity e)
	
	/**
	 * 
	 */
	 Block c(int a)
	
	/**
	 * 
	 */
	 void e(World a, int b, int c, int d)
	
	/**
	 * 
	 */
	public void a(World a, int b, int c, int d, java.util.Random e)
	
	/**
	 * 
	 */
	private void g(World a, int b, int c, int d)
	
	/**
	 * 
	 */
	 void a(World a, int b, int c, int d, EntityLiving e)
	
	/**
	 * 
	 */
	 AxisAlignedBB d(World a, int b, int c, int d)
	
	/**
	 * 
	 */
	 void a(World a, int b, int c, int d, int e)
	
	/**
	 * 
	 */
	 void a(boolean a)
	
	/**
	 * 
	 */
	 void b(World a, int b, int c, int d, int e)
	
	/**
	 * 
	 */
	public int a(int a, java.util.Random b)
	
	/**
	 * 
	 */
	 boolean b(IBlockAccess a, int b, int c, int d, int e)
	
	/**
	 * 
	 */
	 boolean a(IBlockAccess a, int b, int c, int d, int e)
	
	/**
	 * 
	 */
	 Block a(float a)
	
	/**
	 * 
	 */
	 MovingObjectPosition a(World a, int b, int c, int d, Vec3D e, Vec3D f)
	
	/**
	 * 
	 */
	 boolean a(World a, int b, int c, int d, EntityPlayer e)
	
	/**
	 * 
	 */
	 void a(World a, int b, int c, int d, AxisAlignedBB e, java.util.ArrayList f)
	
	/**
	 * 
	 */
	 void a_(World a, int b, int c, int d, int e)
	
	/**
	 * 
	 */
	 void a(World a, int b, int c, int d, Entity e, Vec3D f)
	
	/**
	 * 
	 */
	 void a(IBlockAccess a, int b, int c, int d)
	
	/**
	 * 
	 */
	public void b(World a, int b, int c, int d)
	
	/**
	 * 
	 */
	 boolean a(World a, int b, int c, int d)
	
	/**
	 * 
	 */
	 Block b(float a)
	
	/**
	 * 
	 */
	 boolean d(World a, int b, int c, int d, int e)
	
	/**
	 * 
	 */
	public boolean a()
	
	/**
	 * 
	 */
	 boolean c()
	
	/**
	 * 
	 */
	 void a(float a, float b, float c, float d, float e, float f)
	
	/**
	 * 
	 */
	 void c(World a, int b, int c, int d)
	
	/**
	 * 
	 */
	 boolean d()
	
	/**
	 * 
	 */
	 Block a(StepSound a)
	
	/**
	 * 
	 */
	 boolean a(int a, boolean b)
	
	/**
	 * 
	 */
	 float a(Entity a)
	
	/**
	 * 
	 */
	 Block a(java.lang.String a)
	
	/**
	 * 
	 */
	public int a(java.util.Random a)
	
	/**
	 * 
	 */
	 float a(EntityPlayer a)

}
