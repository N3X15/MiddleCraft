// AUTOMATICALLY GENERATED BY MIDDLECRAFT
/* Allows plugins to access server functions without needing to link the actual server Jar. */
package net.minecraft.server;

public abstract class EntityPlayerMP extends EntityPlayer {
	// FIELDS
	public NetServerHandler field_421;
	public java.util.Set field_420;
	public double field_418;
	public boolean field_12012;
	public boolean field_20064;
	public net.minecraft.server.MinecraftServer mcServer;
	private int field_9156;
	private int field_15004;
	private int[] field_20066;
	private int field_20065;
	public ItemInWorldManager field_425;
	public double field_9155;
	public double field_9154;
	public java.util.List loadedChunks;
	
	// METHODS
	
	/**
	 * 
	 */
	public abstract int[] E();
	
	/**
	 * 
	 */
	public abstract void F();
	
	/**
	 * 
	 */
	public abstract void G();
	
	/**
	 * 
	 */
	public abstract void H();
	
	/**
	 * 
	 */
	public abstract void I();
	
	/**
	 * 
	 */
	public abstract void J();
	
	/**
	 * 
	 */
	public abstract void K();
	
	/**
	 * 
	 */
	protected abstract void a(double a, boolean b);
	
	/**
	 * 
	 */
	public abstract int a(int a);
	
	/**
	 * 
	 */
	public abstract void a(int a, int b, int c);
	
	/**
	 * 
	 */
	public abstract void a(CraftingInventoryCB a, int b, int c);
	
	/**
	 * 
	 */
	public abstract void a(CraftingInventoryCB a, int b, ItemStack c);
	
	/**
	 * 
	 */
	public abstract void a(CraftingInventoryCB a, java.util.List b);
	
	/**
	 * 
	 */
	public abstract void a(TileEntityFurnace a);
	
	/**
	 * 
	 */
	public abstract boolean a(Entity a, int b);
	
	/**
	 * 
	 */
	public abstract void a(ItemStack a);
	
	/**
	 * 
	 */
	public abstract void a(IInventory a);
	
	/**
	 * 
	 */
	public abstract void b(double a, boolean b);
	
	/**
	 * 
	 */
	public abstract void b_();
	
	/**
	 * 
	 */
	public abstract void c(int a);
	
	/**
	 * 
	 */
	public abstract void c(Entity a, int b);
	
	/**
	 * 
	 */
	public abstract void e(Entity a);
	
	/**
	 * 
	 */
	public abstract void f(Entity a);
	
	/**
	 * 
	 */
	public abstract void k();
	
	/**
	 * 
	 */
	public abstract boolean p();
	
	/**
	 * 
	 */
	public abstract float s();

}
