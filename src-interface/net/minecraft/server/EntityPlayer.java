// AUTOMATICALLY GENERATED BY MIDDLECRAFT
/* Allows plugins to access server functions without needing to link the actual server Jar. */
package net.minecraft.server;

public abstract class EntityPlayer{
	// FIELDS
	private ChunkCoordinates a;
	private ko b;
	private Packet59ComplexEntity c;
	private b[] d;
	
	// METHODS
	
	/**
	 * Returns a mapped point or creates and adds one
	 */
	private final PathPoint openPoint(int a, int b, int c)
	
	/**
	 * Returns a new PathEntity for a given start and end point
	 */
	private ItemTool createEntityPath(PathPoint a, PathPoint b)
	
	/**
	 * Internal implementation of creating a path from an entity to a point
	 */
	private ItemTool createEntityPathTo(IMobs a, double b, double c, double d, float e)
	
	/**
	 * Creates a path from an entity to a specified location within a minimum distance
	 */
	public ItemTool createEntityPathTo(IMobs a, int b, int c, int d, float e)
	
	/**
	 * Given an x y z, returns a vertical offset needed to search to find a block to stand on
	 */
	private int getVerticalOffset(IMobs a, int b, int c, int d, PathPoint e)
	
	/**
	 * Returns a point that the entity can safely move to
	 */
	private PathPoint getSafePoint(IMobs a, int b, int c, int d, PathPoint e, int f)
	
	/**
	 * Adds a path from start to end and returns the whole path (args: unused, start, end, unused, maxDistance)
	 */
	private ItemTool addToPath(IMobs a, PathPoint b, PathPoint c, PathPoint d, float e)
	
	/**
	 * Creates a path from one entity to another within a minimum distance
	 */
	public ItemTool createEntityPathTo(IMobs a, IMobs b, float c)
	
	/**
	 * populates pathOptions with available points and returns the number of options found (args: unused1, currentPoint, unused2, targetPoint, maxDistance)
	 */
	private int findPathOptions(IMobs a, PathPoint b, PathPoint c, PathPoint d, float e)

}
