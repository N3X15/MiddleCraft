// AUTOMATICALLY GENERATED BY MIDDLECRAFT
/* Allows plugins to access server functions without needing to link the actual server Jar. */
package net.minecraft.server;

public abstract class EntityPlayer extends EntityLiving {
	// FIELDS
	private int a;
	public double field_20051;
	public double field_20050;
	public double field_20049;
	public double field_20048;
	public EntityFish field_6124;
	public InventoryPlayer inventory;
	public CraftingInventoryCB field_20053;
	public CraftingInventoryCB field_20052;
	public byte field_9152;
	public int field_9151;
	public float field_9150;
	public float field_9149;
	public boolean field_9148;
	public int field_9147;
	public java.lang.String username;
	public int field_4110;
	public double field_20047;
	public double field_20046;
	
	// METHODS
	
	/**
	 * 
	 */
	public abstract double B();
	
	/**
	 * 
	 */
	public abstract void G();
	
	/**
	 * 
	 */
	public abstract void H();
	
	/**
	 * 
	 */
	protected abstract void I();
	
	/**
	 * 
	 */
	public abstract void L();
	
	/**
	 * 
	 */
	public abstract ItemStack M();
	
	/**
	 * 
	 */
	public abstract void N();
	
	/**
	 * 
	 */
	public abstract void a(int a, int b, int c);
	
	/**
	 * 
	 */
	public abstract void a(NBTTagCompound a);
	
	/**
	 * 
	 */
	public abstract void a(TileEntityFurnace a);
	
	/**
	 * 
	 */
	public abstract boolean a(Entity a, int b);
	
	/**
	 * 
	 */
	public abstract float a(Block a);
	
	/**
	 * 
	 */
	protected abstract void a(EntityItem a);
	
	/**
	 * 
	 */
	public abstract void a(ItemStack a);
	
	/**
	 * 
	 */
	public abstract void a(ItemStack a, boolean b);
	
	/**
	 * 
	 */
	public abstract void a(TileEntitySign a);
	
	/**
	 * 
	 */
	public abstract void a(IInventory a);
	
	/**
	 * 
	 */
	public abstract void b(NBTTagCompound a);
	
	/**
	 * 
	 */
	public abstract void b(Entity a, int b);
	
	/**
	 * 
	 */
	public abstract boolean b(Block a);
	
	/**
	 * 
	 */
	public abstract void b(ItemStack a);
	
	/**
	 * 
	 */
	public abstract void b_();
	
	/**
	 * 
	 */
	protected abstract void c();
	
	/**
	 * 
	 */
	public abstract void c(Entity a, int b);
	
	/**
	 * 
	 */
	protected abstract void d(int a);
	
	/**
	 * 
	 */
	public abstract void f(Entity a);
	
	/**
	 * 
	 */
	public abstract void g(Entity a);
	
	/**
	 * 
	 */
	public abstract void h(Entity a);
	
	/**
	 * 
	 */
	public abstract void l();
	
	/**
	 * 
	 */
	public abstract float s();
	
	/**
	 * 
	 */
	public abstract void z();

}
