// AUTOMATICALLY GENERATED BY MIDDLECRAFT
/* Allows plugins to access server functions without needing to link the actual server Jar. */
package net.minecraft.server;

public abstract final class BlockSponge{
	// FIELDS
	public int a;
	public int b;
	public int c;
	public int d;
	
	// METHODS
	
	/**
	 * Returns the object corresponding to the stack.
	 */
	public NBTTagByteArray getItem()
	
	/**
	 * 
	 */
	public BlockSponge a(int a)
	
	/**
	 * Calls the corresponding fct in di
	 */
	public void hitBlock(int a, int b, int c, int d)
	
	/**
	 * Write the stack fields to a NBT object. Return the new NBT object.
	 */
	public Packet1Login writeToNBT(Packet1Login a)
	
	/**
	 * 
	 */
	public int getDamageVsEntity(IMobs a)
	
	/**
	 * Called whenever this item stack is equipped and right clicked. Returns the new item stack to put in the position where this item is. Args: world, player
	 */
	public BlockSponge useItemRightClick(Packet17AddToInventory a, BlockLog b)
	
	/**
	 * 
	 */
	public void a(BlockLog a)
	
	/**
	 * Uses the item stack by the player. Gives the coordinates of the block its being used against and the side. Args: player, world, x, y, z, side
	 */
	public boolean useItem(BlockLog a, Packet17AddToInventory b, int c, int d, int e, int f)
	
	/**
	 * Returns the strength of the stack against a given block.
	 */
	public float getStrVsBlock(BlockSoil a)
	
	/**
	 * 
	 */
	public static BlockSponge a(BlockSponge a)
	
	/**
	 * 
	 */
	public static boolean a(BlockSponge a, BlockSponge b)
	
	/**
	 * 
	 */
	public void hitEntity(lc a)
	
	/**
	 * Returns maximum size of the stack.
	 */
	public int getMaxStackSize()
	
	/**
	 * Raise the damage on the item by the argument. If the dmg is superior to health, destroy one element of the stack.
	 */
	public void damageItem(int a)
	
	/**
	 * Read the stack fields from a NBT object.
	 */
	public void readFromNBT(Packet1Login a)
	
	/**
	 * *
	 */
	public boolean canHarvestBlock(BlockSoil a)
	
	/**
	 * 
	 */
	private boolean b(BlockSponge a)
	
	/**
	 * Returns the max damage an item in the stack can take.
	 */
	public int getMaxDamage()
	
	/**
	 * Returns a new stack with the same properties.
	 */
	public BlockSponge copy()
	
	/**
	 * 
	 */
	public java.lang.String toString()

}
