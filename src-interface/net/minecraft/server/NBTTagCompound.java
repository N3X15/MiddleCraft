// AUTOMATICALLY GENERATED BY MIDDLECRAFT
/* Allows plugins to access server functions without needing to link the actual server Jar. */
package net.minecraft.server;

public abstract class NBTTagCompound extends NBTBase{
	// FIELDS
	private java.util.Map a;
	 ()V setChunkModified;
	
	// METHODS
	
	/**
	 * Gets the type byte for the tag.
	 */
	 byte getType();
	
	/**
	 * 
	 */
	public byte a();
	
	/**
	 * 
	 */
	 void a(java.io.DataInput a);
	
	/**
	 * 
	 */
	 void a(java.io.DataOutput a);
	
	/**
	 * 
	 */
	public boolean a(java.lang.String a);
	
	/**
	 * 
	 */
	public void a(java.lang.String a, byte b);
	
	/**
	 * 
	 */
	public void a(java.lang.String a, double b);
	
	/**
	 * 
	 */
	public void a(java.lang.String a, float b);
	
	/**
	 * 
	 */
	public void a(java.lang.String a, int b);
	
	/**
	 * 
	 */
	public void a(java.lang.String a, long b);
	
	/**
	 * 
	 */
	public void a(java.lang.String a, NBTTagCompound b);
	
	/**
	 * 
	 */
	public void a(java.lang.String a, NBTBase b);
	
	/**
	 * 
	 */
	public void a(java.lang.String a, java.lang.String b);
	
	/**
	 * 
	 */
	public void a(java.lang.String a, short b);
	
	/**
	 * 
	 */
	public void a(java.lang.String a, boolean b);
	
	/**
	 * 
	 */
	public void a(java.lang.String a, byte[] b);
	
	/**
	 * Retrieves a byte value using the specified key, or 0 if no such key was stored.
	 */
	 byte getByte(java.lang.String a);
	
	/**
	 * 
	 */
	public byte b(java.lang.String a);
	
	/**
	 * Retrieves a short value using the specified key, or 0 if no such key was stored.
	 */
	 short getShort(java.lang.String a);
	
	/**
	 * 
	 */
	public short c(java.lang.String a);
	
	/**
	 * Retrieves an integer value using the specified key, or 0 if no such key was stored.
	 */
	 int getInteger(java.lang.String a);
	
	/**
	 * 
	 */
	public int d(java.lang.String a);
	
	/**
	 * Retrieves a long value using the specified key, or 0 if no such key was stored.
	 */
	 long getLong(java.lang.String a);
	
	/**
	 * 
	 */
	public long e(java.lang.String a);
	
	/**
	 * Retrieves a float value using the specified key, or 0 if no such key was stored.
	 */
	 float getFloat(java.lang.String a);
	
	/**
	 * 
	 */
	public float f(java.lang.String a);
	
	/**
	 * Retrieves a double value using the specified key, or 0 if no such key was stored.
	 */
	 double getDouble(java.lang.String a);
	
	/**
	 * 
	 */
	public double g(java.lang.String a);
	
	/**
	 * Retrieves a string value using the specified key, or an empty string if no such key was stored.
	 */
	 java.lang.String getString(java.lang.String a);
	
	/**
	 * 
	 */
	public java.lang.String h(java.lang.String a);
	
	/**
	 * Retrieves a byte array using the specified key, or a zero-length array if no such key was stored.
	 */
	 byte[] getByteArray(java.lang.String a);
	
	/**
	 * 
	 */
	public byte[] i(java.lang.String a);
	
	/**
	 * Retrieves a NBTTagCompound subtag matching the specified key, or a new empty NBTTagCompound if no such key was stored.
	 */
	 NBTTagCompound getCompoundTag(java.lang.String a);
	
	/**
	 * 
	 */
	public NBTTagCompound j(java.lang.String a);
	
	/**
	 * Retrieves a NBTTagList subtag matching the specified key, or a new empty NBTTagList if no such key was stored.
	 */
	 NBTTagList getTagList(java.lang.String a);
	
	/**
	 * 
	 */
	public NBTTagList k(java.lang.String a);
	
	/**
	 * Retrieves a boolean value using the specified key, or false if no such key was stored. This uses the getByte method.
	 */
	 boolean getBoolean(java.lang.String a);
	
	/**
	 * 
	 */
	public boolean l(java.lang.String a);
	
	/**
	 * *
	 */
	 java.lang.String ad_toString();
	
	/**
	 * 
	 */
	public java.lang.String toString();

}
