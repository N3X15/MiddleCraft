// AUTOMATICALLY GENERATED BY MIDDLECRAFT
/* Allows plugins to access server functions without needing to link the actual server Jar. */
package net.minecraft.server;

public abstract class BlockFire extends Block {
	// FIELDS
	private int[] chanceToEncourageFire;
	private int[] abilityToCatchFire;
	
	// METHODS
	
	/**
	 * 
	 */
	public abstract boolean MIDDLECRAFT_func_904_a();
	
	/**
	 * 
	 */
	public abstract boolean MIDDLECRAFT_func_909_a(World a, int b, int c, int d);
	
	/**
	 * 
	 */
	public abstract void MIDDLECRAFT_func_907_a(World a, int b, int c, int d, java.util.Random e);
	
	/**
	 * 
	 */
	public abstract int MIDDLECRAFT_func_905_a(java.util.Random a);
	
	/**
	 * 
	 */
	public abstract int MIDDLECRAFT_func_906_b();
	
	/**
	 * 
	 */
	public abstract void MIDDLECRAFT_func_910_b(World a, int b, int c, int d, int e);
	
	/**
	 * Checks the specified block coordinate to see if it can catch fire.  Args: blockAccess, x, y, z
	 */
	public abstract boolean canBlockCatchFire(IBlockAccess a, int b, int c, int d);
	
	/**
	 * 
	 */
	public abstract boolean MIDDLECRAFT_func_908_d();
	
	/**
	 * 
	 */
	public abstract AxisAlignedBB MIDDLECRAFT_func_903_d(World a, int b, int c, int d);
	
	/**
	 * 
	 */
	public abstract void MIDDLECRAFT_func_911_e(World a, int b, int c, int d);
	
	/**
	 * Retrieves a specified block's chance to encourage their neighbors to burn and if the number is greater than the current number passed in it will return its number instead of the passed in one.  Args: world, x, y, z, curChanceToEncourageFire
	 */
	public abstract int getChanceToEncourageFire(World a, int b, int c, int d, int e);

}
