// AUTOMATICALLY GENERATED BY MIDDLECRAFT
/* Allows plugins to access server functions without needing to link the actual server Jar. */
package net.minecraft.server;

public abstract class Block {
	// FIELDS
	public static Block waterStill;
	public static Block waterMoving;
	public static Block lavaStill;
	public static Block lavaMoving;
	public static Block sand;
	public static Block gravel;
	public static Block oreGold;
	public static Block oreIron;
	public static Block oreCoal;
	public static Block wood;
	public static BlockLeaves leaves;
	public static Block sponge;
	public static Block glass;
	public static Block field_9042;
	public static Block field_9041;
	public static Block field_9040;
	public static Block field_9039;
	public static Block field_9038;
	public static Block field_9037;
	public static Block field_9036;
	public static Block field_9034;
	public static Block field_9033;
	public static Block field_9032;
	public static Block field_9031;
	public static Block field_9030;
	public static Block field_9029;
	private java.lang.String field_666;
	public static Block tilledField;
	public static Block stoneOvenIdle;
	public static Block stoneOvenActive;
	public static Block signPost;
	public static Block doorWood;
	public static Block ladder;
	public static Block minecartTrack;
	public static Block stairCompactCobblestone;
	public static Block signWall;
	public static Block lever;
	public static Block pressurePlateStone;
	public static Block doorSteel;
	public static Block pressurePlatePlanks;
	public static Block oreRedstone;
	public static Block oreRedstoneGlowing;
	public static Block torchRedstoneIdle;
	public static Block torchRedstoneActive;
	public static Block button;
	public static Block snow;
	public static Block ice;
	public static Block blockSnow;
	public static Block cactus;
	public static Block blockClay;
	public static Block reed;
	public static Block jukebox;
	public static Block fence;
	public static Block field_9049;
	public static Block cloth;
	public static Block field_9048;
	public static BlockFlower plantYellow;
	public static BlockFlower plantRed;
	public static BlockFlower mushroomBrown;
	public static BlockFlower mushroomRed;
	public static Block blockGold;
	public static Block blockSteel;
	public static Block stairDouble;
	public static Block stairSingle;
	public static Block brick;
	public static Block tnt;
	public static Block bookShelf;
	public static Block cobblestoneMossy;
	public static Block obsidian;
	public static Block torchWood;
	public static BlockFire fire;
	public static Block mobSpawner;
	public static Block stairCompactPlanks;
	public static Block crate;
	public static Block redstoneWire;
	public static Block oreDiamond;
	public static Block blockDiamond;
	public static Block workbench;
	public static Block crops;
	public static Block pumpkin;
	public static Block bloodStone;
	public static Block slowSand;
	public static Block lightStone;
	public static BlockPortal portal;
	public static Block pumpkinLantern;
	public int blockIndexInTexture;
	public int blockID;
	protected float blockHardness;
	protected float blockResistance;
	public double minX;
	public double minY;
	public double minZ;
	public double maxX;
	public double maxY;
	public double maxZ;
	public StepSound stepSound;
	public float field_554;
	public Material blockMaterial;
	public float slipperiness;
	public static StepSound soundPowderFootstep;
	public static StepSound soundWoodFootstep;
	public static StepSound soundGravelFootstep;
	public static StepSound soundGrassFootstep;
	public static StepSound soundStoneFootstep;
	public static StepSound soundMetalFootstep;
	public static StepSound soundGlassFootstep;
	public static StepSound soundClothFootstep;
	public static StepSound soundSandFootstep;
	public static Block[] blocksList;
	public static boolean[] tickOnLoad;
	public static boolean[] opaqueCubeLookup;
	public static boolean[] isBlockContainer;
	public static int[] lightOpacity;
	public static boolean[] unusedBooleanArray;
	public static int[] lightValue;
	public static Block stone;
	public static BlockGrass grass;
	public static Block dirt;
	public static Block cobblestone;
	public static Block planks;
	public static Block sapling;
	public static Block bedrock;
	
	// METHODS
	
	/**
	 * 
	 */
	public abstract boolean a();
	
	/**
	 * 
	 */
	protected abstract Block a(float a);
	
	/**
	 * 
	 */
	public abstract void a(float a, float b, float c, float d, float e, float f);
	
	/**
	 * 
	 */
	public abstract int a(int a);
	
	/**
	 * 
	 */
	public abstract int a(int a, java.util.Random b);
	
	/**
	 * 
	 */
	public abstract boolean a(int a, boolean b);
	
	/**
	 * 
	 */
	protected abstract Block a(StepSound a);
	
	/**
	 * 
	 */
	public abstract float a(Entity a);
	
	/**
	 * 
	 */
	public abstract boolean a(World a, int b, int c, int d);
	
	/**
	 * 
	 */
	public abstract void a(World a, int b, int c, int d, int e);
	
	/**
	 * 
	 */
	public abstract void a(World a, int b, int c, int d, int e, float f);
	
	/**
	 * 
	 */
	public abstract MovingObjectPosition a(World a, int b, int c, int d, Vec3D e, Vec3D f);
	
	/**
	 * 
	 */
	public abstract void a(World a, int b, int c, int d, AxisAlignedBB e, java.util.ArrayList f);
	
	/**
	 * 
	 */
	public abstract void a(World a, int b, int c, int d, Entity e);
	
	/**
	 * 
	 */
	public abstract void a(World a, int b, int c, int d, Entity e, Vec3D f);
	
	/**
	 * 
	 */
	public abstract boolean a(World a, int b, int c, int d, EntityPlayer e);
	
	/**
	 * 
	 */
	public abstract void a(World a, int b, int c, int d, java.util.Random e);
	
	/**
	 * 
	 */
	public abstract void a(World a, int b, int c, int d, EntityLiving e);
	
	/**
	 * 
	 */
	public abstract float a(EntityPlayer a);
	
	/**
	 * 
	 */
	public abstract Block a(java.lang.String a);
	
	/**
	 * 
	 */
	public abstract int a(java.util.Random a);
	
	/**
	 * 
	 */
	public abstract void a(IBlockAccess a, int b, int c, int d);
	
	/**
	 * 
	 */
	public abstract boolean a(IBlockAccess a, int b, int c, int d, int e);
	
	/**
	 * 
	 */
	protected abstract void a(boolean a);
	
	/**
	 * 
	 */
	public abstract void a_(World a, int b, int c, int d, int e);
	
	/**
	 * 
	 */
	public abstract int b();
	
	/**
	 * 
	 */
	protected abstract Block b(float a);
	
	/**
	 * 
	 */
	public abstract void b(World a, int b, int c, int d);
	
	/**
	 * 
	 */
	public abstract void b(World a, int b, int c, int d, int e);
	
	/**
	 * 
	 */
	public abstract void b(World a, int b, int c, int d, Entity e);
	
	/**
	 * 
	 */
	public abstract void b(World a, int b, int c, int d, EntityPlayer e);
	
	/**
	 * 
	 */
	public abstract boolean b(IBlockAccess a, int b, int c, int d, int e);
	
	/**
	 * 
	 */
	public abstract boolean c();
	
	/**
	 * 
	 */
	protected abstract Block c(float a);
	
	/**
	 * 
	 */
	protected abstract Block c(int a);
	
	/**
	 * 
	 */
	public abstract void c(World a, int b, int c, int d);
	
	/**
	 * 
	 */
	public abstract void c(World a, int b, int c, int d, int e);
	
	/**
	 * 
	 */
	public abstract boolean d();
	
	/**
	 * 
	 */
	public abstract AxisAlignedBB d(World a, int b, int c, int d);
	
	/**
	 * 
	 */
	public abstract boolean d(World a, int b, int c, int d, int e);
	
	/**
	 * 
	 */
	public abstract java.lang.String e();
	
	/**
	 * 
	 */
	public abstract void e(World a, int b, int c, int d);
	
	/**
	 * 
	 */
	public abstract boolean f(World a, int b, int c, int d);
	
	/**
	 * 
	 */
	public abstract void g(World a, int b, int c, int d, int e);

}
