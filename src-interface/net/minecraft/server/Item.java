// AUTOMATICALLY GENERATED BY MIDDLECRAFT
/* Allows plugins to access server functions without needing to link the actual server Jar. */
package net.minecraft.server;

public abstract class Item {
	// FIELDS
	public static Item axeDiamond;
	public static Item stick;
	public static Item bowlEmpty;
	public static Item bowlSoup;
	public static Item swordGold;
	public static Item shovelGold;
	public static Item pickaxeGold;
	public static Item axeGold;
	public static Item silk;
	public static Item feather;
	public static Item gunpowder;
	public static Item hoeWood;
	public static Item hoeStone;
	public static Item hoeSteel;
	public static Item hoeDiamond;
	public static Item hoeGold;
	public static Item seeds;
	public static Item wheat;
	public static Item bread;
	public static Item helmetLeather;
	public static Item plateLeather;
	public static Item legsLeather;
	public static Item bootsLeather;
	public static Item helmetChain;
	public static Item plateChain;
	public static Item legsChain;
	private java.lang.String healAmount;
	public static Item redstone;
	public static Item snowball;
	public static Item boat;
	public static Item leather;
	public static Item bucketMilk;
	public static Item brick;
	public static Item clay;
	public static Item reed;
	public static Item paper;
	public static Item book;
	public static Item slimeBall;
	public static Item minecartCrate;
	public static Item minecartPowered;
	public static Item egg;
	public static Item compass;
	public static Item fishingRod;
	public static Item pocketSundial;
	public static Item lightStoneDust;
	public static Item fishRaw;
	public static Item fishCooked;
	public static Item record13;
	public static Item recordCat;
	public final int swiftedIndex;
	protected int maxStackSize;
	protected int maxDamage;
	protected int iconIndex;
	public static Item bootsChain;
	public static Item helmetSteel;
	public static Item plateSteel;
	public static Item legsSteel;
	public static Item bootsSteel;
	public static Item helmetDiamond;
	public static Item plateDiamond;
	public static Item legsDiamond;
	public static Item bootsDiamond;
	public static Item helmetGold;
	public static Item plateGold;
	public static Item legsGold;
	public static Item bootsGold;
	public static Item flint;
	public static Item porkRaw;
	public static Item porkCooked;
	public static Item painting;
	public static Item appleGold;
	public static Item sign;
	public static Item doorWood;
	public static Item bucketEmpty;
	public static Item bucketWater;
	public static Item bucketLava;
	public static Item minecartEmpty;
	public static Item saddle;
	public static Item doorSteel;
	protected static java.util.Random rand;
	protected boolean bFull3D;
	public static gm[] itemsList;
	public static Item shovelSteel;
	public static Item pickaxeSteel;
	public static Item axeSteel;
	public static Item flintAndSteel;
	public static Item appleRed;
	public static Item bow;
	public static Item arrow;
	public static Item coal;
	public static Item diamond;
	public static Item ingotIron;
	public static Item ingotGold;
	public static Item swordSteel;
	public static Item swordWood;
	public static Item shovelWood;
	public static Item pickaxeWood;
	public static Item axeWood;
	public static Item swordStone;
	public static Item shovelStone;
	public static Item pickaxeStone;
	public static Item axeStone;
	public static Item swordDiamond;
	public static Item shovelDiamond;
	public static Item pickaxeDiamond;
	
	// METHODS
	
	/**
	 * 
	 */
	public abstract java.lang.String a();
	
	/**
	 * 
	 */
	public abstract Item a(int a);
	
	/**
	 * 
	 */
	public abstract Item a(int a, int b);
	
	/**
	 * 
	 */
	public abstract int a(Entity a);
	
	/**
	 * 
	 */
	public abstract boolean a(Block a);
	
	/**
	 * 
	 */
	public abstract void a(ItemStack a, int b, int c, int d, int e);
	
	/**
	 * 
	 */
	public abstract ItemStack a(ItemStack a, World b, EntityPlayer c);
	
	/**
	 * 
	 */
	public abstract boolean a(ItemStack a, EntityPlayer b, World c, int d, int e, int f, int g);
	
	/**
	 * 
	 */
	public abstract float a(ItemStack a, Block b);
	
	/**
	 * 
	 */
	public abstract void a(ItemStack a, EntityLiving b);
	
	/**
	 * 
	 */
	public abstract Item a(java.lang.String a);
	
	/**
	 * 
	 */
	public abstract int b();
	
	/**
	 * 
	 */
	public abstract void b(ItemStack a, EntityLiving b);
	
	/**
	 * 
	 */
	public abstract int c();
	
	/**
	 * 
	 */
	public abstract Item d();

}
